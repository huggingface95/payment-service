type PriceListPPFee {
    id: ID!
    "Название"
    name: String!
    "Тип"
    fee_type: FeeType @belongsTo(relation: "feeType")
    "Тип операции"
    operation_type: OperationType @belongsTo(relation: "operationType")
    "Период"
    period: FeePeriod @belongsTo(relation: "feePeriod")
    "Цены"
    fees: [PriceListFeeCurrency] @belongsTo(relation: "fees")
    fee_ranges: JSON
    "Дата создания"
    created_at: DateTimeUtc
    "Дата обновления"
    updated_at: DateTimeUtc
}

extend type Query @guard {
    """
    Получить список прайс листов для PP
    """
    priceListPPFees(
        filter: _ @filterConditions(static: QueryPriceListPPFeesFilterStatic)
    ): [PriceListPPFee!]!
    @orderBy(column: "id", direction: ASC) @all
}

input QueryPriceListPPFeesFilterStatic @spread{
    id: ID @eq
    type_id: ID @eq
    operation_type_id: ID @eq
    period_id: ID @eq
    hasCompanyFilterById: ID @eq
    hasPaymentProviderFilterById: ID @eq
    hasPaymentSystemFilterById: ID @eq
    hasFeesFilterById: ID @eq
    hasCurrenciesFilterById: ID @eq
}

input PriceListPPFeeInput {
    name: String!
    type_id: ID!
    operation_type_id: ID!
    period_id: ID!
    payment_system_id: ID!
    payment_provider_id: ID!
    fee_ranges: JSON
    fees: [PriceListFeesList!]
}

extend type Mutation @guard {
    """
    Создать прайс лист для PP
    """
    createPriceListPPFees(
        input: PriceListPPFeeInput @spread
    ): PriceListPPFee
    @field(resolver: "PriceListPPFeesMutator@create")
    @validator

    """
    Обновить прайс лист для PP
    """
    updatePriceListPPFees(
        id: ID!
        input: PriceListPPFeeInput @spread
    ): PriceListPPFee
    @field(resolver: "PriceListPPFeesMutator@update")

    """
    Удалить прайс лист PP
    """
    deletePriceListPPFees(id: ID!): PriceListPPFee   @delete
}
