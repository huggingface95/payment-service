type ActivityLog {
    "ID"
    id: ID!
    "Название компании"
    company: String!
    "Группа"
    member: String!
    "Группа"
    group: String!
    "Домен"
    domain: String!
    "Описание"
    description: String
    "Изменения"
    changes: String
    "Дата создания"
    created_at: DateTime!
}

type ActivityLogs {
    data: [ActivityLog!]
    paginatorInfo: PaginatorInfo
}

extend type Query @guard {
    """
    Получить список логов активности 
    query: {
        column: COMPANY, value: "", 
        column: MEMBER, value: "", 
        column: GROUP, value: "", 
        column: DOMAIN, value: "", 
        column: CREATED_AT, value: "2021-10-12"
    } фильтр по company, member, group, domain, created_at
    orderBy: [{ column: CREATED_AT, order: DESC }] сортировка по created_at
    """
    activityLogs(
        page: Int = 1,
        count: Int = 15,
        query: QueryActivityLogsStatic
        orderBy: [OrderBy!]
    ): ActivityLogs
        @field(resolver:"ActivityLogsQuery@get")
}

input QueryActivityLogsStatic @spread {
    company: String @eq
    member: String @eq
    group: String @eq
    domain: String @eq
    created_at: Date @like
}

input OrderBy @spread {
    column: Column!
    order: Order!
}

enum Column {
    CREATED_AT
}

enum Order {
    ASC
    DESC
}