"""
Участники
Administration->Members->MemberAccessLimitation
"""
type MemberAccessLimitation {
    id: ID!
    "Получить компанию"
    company: Company @BelongsTo(relation: "company")
    "Получить Group"
    member: Members @belongsTo(relation: "member")
    "Получить модуль"
    module: Module @belongsTo(relation: "module")
    "Получить GroupType"
    group: GroupType @belongsTo(relation: "group")
    "Получить groupRole"
    group_roles: [GroupRole] @belongsToMany(relation: "groupRoles")
    "Получить проект"
    project: Project @belongsTo(relation: "project")
    "Получить связанный платежный провайдер"
    provider: PaymentProvider @hasOne(relation: "provider")
    "Показать только своих аппликантов"
    see_own_applicants: Boolean
}

extend type Query @guard {
    "Получить участника по ID"
    memberAccessLimitation(id: ID @eq): MemberAccessLimitation   @find
    """
    Получить список участников
    orderBy: [{ column: ID, order: DESC }] сортировка по ID
    filter:{column: FIRST_NAME, operator: LIKE, value: ""} фильтр по фамилии, имени, email, компании, роли, департаменту, должности
    hasPosition: {column: GROUP_ROLE_ID, operator:EQ, value: 8} поиск по id GROUP ROLE
    """
    memberAccessLimitations(
        member_id: ID! @eq,
        filter: _ @filterConditions(static: QueryMemberAccessLimitationsFilterStatic),
        orderBy: _ @orderBy(columns: ["id"],
    )): [MemberAccessLimitation!]!   @paginate(defaultCount: 10) @orderBy(column: "id", direction: ASC)
}

input QueryMemberAccessLimitationsFilterStatic @spread{
    doesntHaveGroupRoles: Boolean @eq
    hasGroupRolesFilterById: ID @eq
    module_id: ID @eq
    project_id: ID @eq
    payment_provider_id: Mixed @is_null @eq
    group_type_id: Mixed @is_null @eq
}

input InputMemberAccessLimitation{
    "ID Мембера"
    member_id: ID!
    "ID Груп Роль"
    groupRoles: PivotTable
    "ID Груп type"
    group_type_id: ID
    "ID компании"
    company_id: ID!
    "ID модуля"
    module_id: ID!
    "ID проекта"
    project_id: ID
    "ID платежного провайдера"
    payment_provider_id: ID
    "Показать только своих аппликантов"
    see_own_applicants: Boolean
}

extend type Mutation  {
    """
    Создать ограничение доступа
    """
    createMemberAccessLimitation(
        input: InputMemberAccessLimitation! @spread
    ): MemberAccessLimitation @create

    """
    Обновить ограничение доступа
    """
    updateMemberAccessLimitation(
        "ID шаблона"
        id: ID!
        input: InputMemberAccessLimitation! @spread
    ): MemberAccessLimitation @update

    """
    Удалить ограничение доступа
    """
    deleteMemberAccessLimitation(
        "ID доступа"
        id: ID!
    ): MemberAccessLimitation   @delete
}
