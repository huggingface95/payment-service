"""
Платежные системы
Settings->Payment System
"""
type PaymentSystem {
    id: ID!
    "Название платежной системы"
    name: String!
    "Активна или нет"
    is_active: Boolean
    "Получить связанные регионы"
    regions: [Region] @belongsToMany(relation:"regions")
    "Получить связанную компанию"
    company: Company @hasOne(relation:"company")
    "Получить связанные валюты"
    currencies: [Currencies] @belongsToMany(relation:"currencies")
    "Получить Платежные провайдеры"
    providers: [PaymentProvider] @belongsToMany(relation:"providers")
    "Получить Реквизиты"
    banks: [PaymentBank] @belongsToMany(relation:"banks")
    "Описание"
    description: String
    "Лого"
    logo: Files @belongsTo(relation: "logo")
}

type Company {
    id: ID!
    "Название компании"
    name: String!
    "URL компании"
    url: String
    "E-mail компании"
    email: EMAIL!
    "Регистрационный номер компании"
    company_number: String
    "Контактное лицо"
    contact_name: String
    "Страна"
    country: Country @belongsTo(relation: "country")
    "Индекс"
    zip: String
    "Город"
    city: String
    "Адресс"
    address: String
    "Участники компании"
    members: [Members] @hasMany(relation: "members")
    "Количество участников в компании"
    members_count: Int
    "Департаменты компании"
    departments: [Departments] @hasMany(relation: "departments")
    "Должности компании"
    positions: [DepartmentPosition] @hasMany(relation: "positions")
    "Получить настройки компании"
    company_settings: CompanySettings  @hasOne(relation: "companySettings")
    "Дополнительные поля"
    additional_fields: JSON
    created_at: DateTime!
    updated_at: DateTime!
}

extend type Query @guard {
    "Получить платежную систем по ID"
    paymentSystem(id: ID @eq): PaymentSystem   @find
    "Получить список платежных систем"
    paymentSystems(
        filter: _ @filterConditions(static: QueryPaymentSystemsFilterStatic),
        orderBy: _ @orderBy(columns: ["id","name","is_active"])
    ): [PaymentSystem!]! @paginate(defaultCount: 10) @orderBy(column: "id", direction: ASC)
}

input QueryPaymentSystemsFilterStatic @spread{
    id: ID @eq
    hasProvidersFilterById: ID @eq
    hasCompaniesFilterById: ID @eq
}
input InputPaymentSystem {
    "Название платежной системы"
    name: String!
    "Активный не активный (true/false)"
    is_active: Boolean
    "массив ID стран"
    regions: PivotTable
    "массив ID валют"
    currencies: PivotTable
    "массив ID провайдеров"
    providers: PivotTable
    "массив ID Реквизитов"
    banks: PivotTable
    "Описание"
    description: String
    "Лого"
    logo: PivotTable
}
extend type Mutation @guard {
    "Создать платежную систему"
    createPaymentSystem(
        input: InputPaymentSystem! @spread
    ): PaymentSystem   @create

    "Обновить поля платежной системы"
    updatePaymentSystem(
        "ID платежной системы"
        id: ID!
        input: InputPaymentSystem! @spread
    ): PaymentSystem   @update

    "Удалить платежную систему"
    deletePaymentSystem(id: ID!): PaymentSystem   @field(resolver:"PaymentSystemMutator@delete")

}

