union Clientable = ApplicantIndividual | ApplicantCompany | GroupRole | Members
"""
Шаблоны электронной почты
Banking-> Email Notifications
"""
type EmailNotification {
    id: ID!
    "Тип"
    type: String
    "Тип получателя"
    recipient_type: String
    "Тип Группы"
    group_type: String
    "Получить templates"
    templates: [EmailTemplate] @belongsToMany(relation: "templates")
    "Получить клиента ApplicantIndividual | ApplicantCompany | GroupRole | Members"
    clientable: Clientable @morphTo
    "Ид компании"
    company_id: Int
    "Получить компанию"
    company: Companies @belongsTo(relation: "company")
    created_at: DateTime
    updated_at: DateTime
}

extend type Query @guard {
    "Получить по ID"
    emailNotification(id: ID @eq): EmailNotification   @find
    """
    Получить список билетов
    orderBy: [
    {column: ID, order: DESC},
    ] сортировка по ID
    where:{column: SUBJECT, operator: LIKE, value: ""} фильтр по имени
    """
    emailNotifications(
        hasCompany: _ @whereHasConditions(columns: ["name"]),
        hasTemplates: _ @whereHasConditions(columns: ["subject"]),
        created_at: DateRange @whereBetween,
        where: _ @whereConditions(columns: ["type", "company_id", "recipient_type", "group_type"]),
        orderBy: _ @orderBy(
            columns: ["id"]
        )
    ): [EmailNotification!]!   @paginate(defaultCount: 10) @orderBy(column: "id", direction: ASC)
}

enum NotifyType {
    Administration @enum(value: "administration")
    Client @enum(value: "client")
}

enum RecipientType {
    PERSON @enum(value: "person")
    GROUP @enum(value: "group")
}

enum GroupType {
    INDIVIDUAL @enum(value: "Individual")
    COMPANY @enum(value: "Company")
    MEMBER @enum(value: "Member")
}

extend type Mutation @guard {
    "Создать электронную почту"
    createEmailNotification(
        "Тип"
        type: NotifyType!
        "Тип получателя"
        recipient_type: RecipientType!
        "Тип Группы"
        group_type: GroupType!
        "ID компании"
        company_id: Int!
        "ID клиента тип унион"
        client_id: Int!
        "ID email templates"
        templates: [Int]!
    ): EmailNotification   @field(resolver:"EmailNotificationMutator@create")

    "Обновить данные компании"
    updateEmailNotification(
        id: ID!
        "Тип"
        type: NotifyType!
        "Тип получателя"
        recipient_type: RecipientType!
        "Тип Группы"
        group_type: GroupType!
        "ID компании"
        company_id: Int
        "ID клиента тип унион"
        client_id: Int!
        "ID email templates"
        templates: [Int]
    ): EmailNotification   @field(resolver:"EmailNotificationMutator@update")

    "Удалить запись"
    deleteEmailNotification(
        id: ID!
    ): EmailNotification   @delete
}


