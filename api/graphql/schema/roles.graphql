"""
Роли
Settings->Manager Roles->Roles List
"""
type Role {
    id: ID!
    "Название роли"
    name: String!
    "Описание для роли"
    description: String
    "Получить список разрешений"
    permissions: [Permissions] @belongsToMany(relation: "permissions")
    "Получить дерево разрешений"
    permissions_tree: JSON
    "Получить список групп"
    group_type: Groups @hasOne(relation: "groupType")
    groups: [GroupRole] @hasMany(relation: "groups")
    "Получить количество групп с данной ролью"
    groups_count: Int
}


extend type Query {
    "Получить роль по ID"
    role(id: ID @eq): Role @field(resolver:"RoleQuery@permissions")
    """
    Получить список ролей
    groups_sort: сортировка по количеству групп
    orderBy: [{ column: ID, order: DESC }] сортировка по ID или по названию
    where: {column: name, operator: LIKE, value: "Name"}
    """
    roles(groups_sort: Sort @scope(name:"GroupsSort"),
        hasGroupTypes: _ @whereHasConditions(columns: ["name", "id"]),
        hasGroups: _ @whereHasConditions(columns: ["name", "id"]),
        where: _ @whereConditions(columns: ["name"]), orderBy: _ @orderBy(
        columns: ["id","name","description"],
    )): [Role!]! @paginate(defaultCount: 10) @orderBy(column: "id", direction: ASC)
}

extend type Mutation {
    createRole(
        "Название роли"
        name: String!
        "Описание"
        description: String
        "Массив разрешений"
        permissions: [ID]
        "Массив груп поумолчанию"
        groups: [ID]
    ): Role @field(resolver:"RoleMutator@create")

    updateRole(
        "ID роли"
        id: ID!
        "Название роли"
        name: String!
        "Описание роли"
        description: String
        "Массив разрешений"
        permissions: [ID]
        "Массив групп поумолчанию"
        groups: [ID]
    ): Role @field(resolver:"RoleMutator@update")

    deleteRole(
        "ID роли"
        id: ID!
    ): Role @delete


}

