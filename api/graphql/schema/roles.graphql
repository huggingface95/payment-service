"""
Роли
Settings->Manager Roles->Roles List
"""
type Role {
    id: ID!
    "Название роли"
    name: String!
    "Описание для роли"
    description: String
    "Получить список полномочий"
    permissions: [Permissions] @belongsToMany(relation: "permissions")
    "Получить список категорий полномочий"
    permission_category_all_member: [PermissionCategory] @belongsToMany(relation: "permissionCategories")
    "Получить дерево разрешений"
    permissions_tree: JSON
    "Получить тип группы"
    group_type: GroupType @belongsTo(relation: "groupType")
    "Получить компанию"
    company: Company @belongsTo(relation: "company")
    "Получить список групп"
    groups: [GroupRole] @hasMany(relation: "groups")
    "Получить количество групп с данной ролью"
    groups_count: Int
    is_all_companies: Boolean
}


extend type Query @guard {
    "Получить роль по ID"
    role(id: ID @eq): Role   @field(resolver:"RoleQuery@permissions")
    """
    Получить список ролей
    filter: {column: NAME, value: Name}
    orderBy: [{ column: ID, order: DESC }] сортировка по ID или по названию
    """
    roles(groups_sort: Sort @scope(name:"GroupsSort"),
        trashed: Trashed @trashed
        filter: _ @filterConditions(static: QueryRolesFilterStatic),
        orderBy: _ @orderBy(columns: ["id","name","description"])
    ): [Role!]!   @paginate(defaultCount: 10) @orderBy(column: "id", direction: ASC)
}

input QueryRolesFilterStatic @spread{
    name: String @eq @ilike
    company_id: ID @eq
    hasGroupTypeMixedIdOrName: Mixed @eq
    hasGroupsMixedIdOrName: Mixed @eq
}


extend type Mutation @guard {
    createRole(
        "Название роли"
        name: String!
        "Описание"
        description: String
        "Массив разрешений"
        permissions: [ID]
        "Тип группы"
        group_type_id: ID
        "ID компании"
        company_id: ID
        "ID группы полномочий Применить ко всем компаниям"
        permission_category_all_member: [ID]
    ): Role   @field(resolver:"RoleMutator@create")

    updateRole(
        "ID роли"
        id: ID!
        "Название роли"
        name: String!
        "Описание роли"
        description: String
        "Массив разрешений"
        permissions: [ID]
        "Тип группы"
        group_type_id: ID
        "ID компании"
        company_id: ID
        "ID группы полномочий Применить ко всем компаниям"
        permission_category_all_member: [ID]
    ): Role   @field(resolver:"RoleMutator@update")

    deleteRole(
        "ID роли"
        id: ID!
    ): Role   @field(resolver:"RoleMutator@delete")


}

