"""
KYC Timeline
"""
type KycTimeline {
    "ID"
    id: ID!
    "ОС"
    os: String!
    "Браузер"
    browser: String!
    "IP адрес"
    ip: String!
    "Действие"
    action: String!
    action_type: KycTimelineActionType!
    "Тег"
    tag: String!
    "Мембер"
    creator: Members @belongsTo(relation: "member")
    "Документ"
    document: ApplicantDocument @belongsTo(relation: "document")
    "ID аппликанта"
    applicant_id: ID!
    "Тип аппликанта"
    applicant_type: ApplicantType!
    "Аппликант"
    applicant: Client @morphTo(relation: "clientable")
    "Компания"
    company: Company @belongsTo(relation: "company")
    "Старые значения"
    action_old_value: JSON
    "Новые значения"
    action_new_value: JSON
    "Дата добавления"
    created_at: DateTimeUtc!
}

type KycTimelines {
    data: [KycTimeline!]
    paginatorInfo: PaginatorInfo
}

enum KycTimelineActionType {
    DOCUMENT_UPLOAD @enum(value: "document_upload")
    DOCUMENT_STATE @enum(value: "document_state")
    VERIFICATION @enum(value: "verification")
    EMAIL @enum(value: "email")
    PROFILE @enum(value: "profile")
}

enum Module {
    KYC @enum(value: "KYC")
    BANKING @enum(value: "Banking")
}

extend type Query @guard {
    """
    Получить запись
    """
    kycTimeline(id: ID! @eq): KycTimeline @find

    """
    Получить список
    """
    kycTimelines(
        applicant_id: ID! @eq,
        applicant_type: ApplicantType! @eq,
        company_id: ID! @eq,
        page: Int = 1,
        first: Int = 15,
        orderBy: _ @orderBy(columns: ["id", "created_at"])
    ): KycTimelines
        @field(resolver: "KycTimelineQuery@get")
}
