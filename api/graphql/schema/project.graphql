
type Project {
    id: ID!
    "Название проекта"
    name: String!
    "URL"
    url: String
    "Описание"
    description: String
    "Email поддержки"
    support_email: String
    "URL входа"
    login_url: String
    "Имя отправителя SMS"
    sms_sender_name: String
    "URL клиента"
    client_url: String
    "URL восстановления пароля"
    forgot_password_url: String
    "Дополнительны поля"
    additional_fields_basic: JSON
    "Дополнительные поля настройки"
    additional_fields_settings: JSON
    "Настройки проекта"
    project_settings: [ProjectSettings] @hasMany(relation: "projectSettings")
    "Настройки api проекта"
    project_api_settings: ProjectApiSettingsResponse
    "Модуль"
    module: Module @BelongsTo(relation: "module")
    "Компания"
    company: Company @BelongsTo(relation: "company")
    "Аватар"
    avatar: Files @belongsTo(relation: "avatar")
    "Состояние"
    state: State @belongsTo(relation: "state")
    created_at: DateTimeUtc!
    updated_at: DateTimeUtc!
}

"""
Настройки проекта
"""
type ProjectSettings {
    "Тип группы"
    group_type: GroupType @belongsTo(relation: "groupType")
    "Роль"
    group_role: GroupRole @belongsTo(relation: "groupRole")
    "Связанный платежный провайдер"
    payment_provider: PaymentProvider @belongsTo(relation: "paymentProvider")
    "Связанный iban провайдер"
    iban_provider: PaymentProviderIban @belongsTo(relation: "ibanProvider")
    "Связанный iban провайдер"
    quote_provider: QuoteProvider @belongsTo(relation: "quoteProvider")
    "Связанный платежный шаблон"
    commission_template: CommissionTemplate @belongsTo(relation: "commissionTemplate")
    "Индивидуал или компани"
    applicant_type: ApplicantType!
}

extend type Query @guard {
    """
    Получить компанию по ID
    """
    project(id: ID @eq): Project   @find
    """
    Получить список проектов
    """
    projects(
        filter: _ @filterConditions(static: QueryProjectsFilterStatic),
    ): [Project!]!
        @paginate(defaultCount: 100)
        @orderBy(column: "id", direction: DESC)
}

input QueryProjectsFilterStatic @spread {
    id: ID @eq
    company_id: ID @eq
    module_id: ID @eq
}

input InputProjectSettings @spread {
    group_type_id: ID
    group_role_id: ID
    commission_template_id: ID
    payment_provider_id: ID
    iban_provider_id: ID
    quote_provider_id: ID
    applicant_type: ApplicantType!
}

input InputProject {
    "Название"
    name: String!
    "URL"
    url: String
    "Описание"
    description: String
    "Email поддержки"
    support_email: String
    "URL входа"
    login_url: String
    "Имя отправителя SMS"
    sms_sender_name: String
    "URL клиента"
    client_url: String
    "URL восстановления пароля"
    forgot_password_url: String
    "Компания"
    company_id: ID!
    "Модуль"
    module_id: ID!
    "Аватар"
    avatar_id: ID
    "Состояние"
    state_id: ID
    "Настройки"
    project_settings: [InputProjectSettings]
    "Дополнительные поля"
    additional_fields_basic: [AdditionalFieldInput]
    "Дополнительные поля настройки"
    additional_fields_settings: [AdditionalFieldInput]
}

extend type Mutation @guard {
    """
    Создать проект
    """
    createProject(
        input: InputProject! @spread
    ): Project
        @field(resolver: "ProjectMutator@create")
        @validator

    """
    Обновить проект
    """
    updateProject(
        "ID проекта"
        id: ID!
        input: InputProject! @spread
    ): Project
        @field(resolver:"ProjectMutator@update")
        @validator

    """
    Удалить проект
    """
    deleteProject(
        "ID проекта"
        id: ID!
    ): Project @delete
}
