"""
История уровней риска Applicant Company
Applicants -> Individual -> Individual Company Full Profile -> General
"""
type ApplicantCompanyRiskLevelHistory {
    id: ID!
    "Комментарий"
    comment: String!
    "Дата создания сообщения"
    created_at: DateTime
    "Получить аппликанта"
    applicant_company: ApplicantCompany @belongsTo(relation:"applicantCompany")
    "Получить владельца"
    manager: Members @belongsTo(relation:"member")
    "Получить уровень риска"
    risk_level: ApplicantRiskLevel @belongsTo(relation:"applicantRiskLevel")
}

extend type Query @guard {
    """
    Получить историю списка уровней риска по аппликанту
    orderBy: [{ column: ID, order: DESC }] сортировка по ID
    where:{column: applicant_id, operator: LIKE, value: ""} фильтр по аппликанту
    """
    applicantCompanyRiskLevelHistory(
        filter: _ @filterConditions(static: QueryApplicantCompanyRiskLevelHistoryFilterStatic),
        orderBy: _ @orderBy(columns: ["id"])
    ): [ApplicantCompanyRiskLevelHistory!]!    @paginate(defaultCount: 10) @orderBy(column: "id", direction: ASC)
}

input QueryApplicantCompanyRiskLevelHistoryFilterStatic @spread{
    applicant_company_id: ID! @eq
    risk_level_id: ID @eq
}

extend type Mutation @guard {
    "Добавить запись"
    createApplicantCompanyRiskLevelHistory(
        "Комментарий"
        comment: String!
        "Аппликант"
        applicant_company_id: ID!
        "Уровень риска"
        risk_level_id: ID!
    ):ApplicantCompanyRiskLevelHistory    @field(resolver: "ApplicantCompanyRiskLevelHistoryMutator@create")

    "Удалить запись"
    deleteApplicantCompanyRiskLevelHistory(
        id: ID!
    ): ApplicantCompanyRiskLevelHistory    @delete
}

