"""
Компания
Administration->Company Info
error codes: 500, 400
"""
type Companies {
    id: ID!
    "Название компании"
    name: String!
    "URL компании"
    url: String
    "E-mail компании"
    email: EMAIL!
    "Регистрационный номер компании"
    company_number: String
    "Контактное лицо"
    contact_name: String
    "Страна"
    country: Country @belongsTo(relation: "country")
    "Индекс"
    zip: String
    "Город"
    city: String
    "Адресс"
    address: String
    "Участники компании"
    members: [Members] @hasMany(relation: "members")
    "Количество участников в компании"
    members_count: Int
    "Департаменты компании"
    departments: [Departments] @hasMany(relation: "departments")
    "Должности компании"
    positions: [DepartmentPosition] @hasMany(relation: "positions")
    "Получить настройки компании"
    company_settings: CompanySettings  @hasOne(relation: "companySettings")
    "Дополнительные поля"
    additional_fields: JSON
    created_at: DateTime!
    updated_at: DateTime!
}

extend type Query @guard {
    """
    Получить компанию по ID
    """
    company(id: ID @eq): Companies @can(ability: "view", query: true) @find
    """
    Получить список компаний
    member_count: сортировка по количеству участников компании
    county: сортировка по  стране
    orderBy: [{ column: CREATED_AT, order: DESC }] сортировка по дате создания, по ID, по названию, email, url
    created_at: {from:"2021-10-11", to: "2021-10-12"} фильтр по дате
    where:{column: NAME, operator: LIKE, value: ""} фильтр по названию, по email , url
    """
    companies(created_at: DateRange @whereBetween, country: Sort @scope(name:"CountrySort"), member_count: Sort @scope(name:"MemberSort"), where: _ @whereConditions(columns: ["name", "email","url","created_at"]), orderBy: _ @orderBy(
        columns: ["id","created_at","name","email","url"],
    )): [Companies!]! @can(ability: "view", query: true) @paginate(defaultCount: 10) @orderBy(column: "id", direction: ASC)
}

extend type Mutation @guard {
    "Создать компанию"
    createCompany(
        "Название компании"
        name: String!
        "Email компании"
        email: EMAIL!
        "Сайт компании"
        url: String
        "Индекс компании"
        zip: String
        "Адрес компании"
        address: String
        "Город компании"
        city: String
        "Регистрационный номер компании"
        company_number: String
        "Контактное имя"
        contact_name: String
        "ID страны"
        country_id: ID!
    ): Companies @can(ability: "create", query: true) @create

    "Обновить данные компании"
    updateCompany(
        "ID компании"
        id: ID!
        "Название компании"
        name: String
        "Email компании"
        email: EMAIL
        "Сайт компании"
        url: String
        "Индекс компании"
        zip: String
        "Адрес компании"
        address: String
        "Город компании"
        city: String
        "Регистрационный номер компании"
        company_number: String
        "ID страны"
        country_id: ID
        "Контактное имя"
        contact_name: String
        "Дополнительные поля"
        additional_fields: [AdditionalFieldInput]
    ): Companies @can(ability: "update", query: true) @field(resolver:"CompanyMutator@update")

    "Удалит компанию"
    deleteCompany(id: ID!): Companies @can(ability: "delete", query: true) @field(resolver:"CompanyMutator@delete")

}

