"""
Модули аппликанта
Dashboard -> Applicants -> Individual -> Full Profile -> Settings
"""
type ApplicantIndividualModules {
    "Получить индивидуала"
    applicant_individual: ApplicantIndividual @belongsTo(relation: "ApplicantIndividual")
    "Получить модуль"
    applicant_module: ApplicantModules @belongsTo(relation: "module")
    applicant_module_id: ID
    "Активен = true или не активный = false"
    is_active: Boolean
}


extend type Query @guard {
    """
    Получить список всех модулей аппликанта
    orderBy: [{ column: ID, order: DESC }] сортировка по ID
    """
    applicantIndividualModules(
        filter: _ @filterConditions(static: QueryApplicantIndividualModulesFilterStatic),
        where: _ @whereConditions(columns: ["applicant_individual_id"]),
        orderBy: _ @orderBy(columns: ["applicant_individual_id"])
    ): [ApplicantIndividualModules!]!    @paginate(defaultCount: 10) @orderBy(column: "applicant_individual_id", direction: ASC)
}

input QueryApplicantIndividualModulesFilterStatic @spread{
    applicant_individual_id: ID @eq
}

extend type Mutation @guard {
    "Создать модуль аппликанта"
    createApplicantIndividualModule(
        "Аппликант"
        applicant_individual_id: ID!
        "Модуль"
        applicant_module_id: [ID]
        "Активный или неактивный"
        is_active: Boolean
    ): ApplicantIndividual    @field(resolver:"ApplicantIndividualModulesMutator@attach")

    "Активировать или деактивировать модуль аппликанту"
    updateApplicantIndividualModule(
        "Аппликант"
        applicant_individual_id: ID!
        "Модуль"
        applicant_module_id: [ID]
        "Активный или неактивный"
        is_active: Boolean
    ): ApplicantIndividual    @field(resolver:"ApplicantIndividualModulesMutator@update")

    "Удалить модуль"
    deleteApplicantIndividualModule(
        applicant_individual_id: ID!
        applicant_module_id: [ID]
    ): ApplicantIndividual    @field(resolver: "ApplicantIndividualModulesMutator@detach")


}

