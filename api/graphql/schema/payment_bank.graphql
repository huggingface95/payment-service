"""
Банки
Settings->Payment System -> Payment System List -> Profile
"""
type PaymentBank {
    id: ID!
    "Название банка"
    name: String!
    "Адрес банка"
    address: String
    "Код банка"
    bank_code: String
    "Код платежной системы"
    payment_system_code: String
    "Получить валюты"
    currencies: [Currencies] @hasMany(relation: "currencies")
    "Получить регионы"
    regions: [Region] @hasMany(relation: "regions")
    "Получить банк корреспондент"
    bank_correspondent: BankCorrespondent @belongsTo(relation: "bankCorrespondent")
    "Платежная провидер"
    payment_provider: PaymentProvider @belongsTo(relation:"paymentProvider")
    "Платежная система"
    payment_system: PaymentSystem @belongsTo(relation:"paymentSystem")
    "Активный не активный (true/false)"
    is_active: Boolean
}

extend type Query @guard {
    "Получить банк по ID"
    paymentBank(id: ID @eq): PaymentBank @find
    "Получить список банков"
    paymentBanks(
        filter: _ @filterConditions(static: QueryPaymentBanksFilterStatic),
        query: QueryPaymentBankCondition,
        orderBy: _ @orderBy(columns: ["id","name","is_active"])
    ): [PaymentBank!]!   @paginate(defaultCount: 10) @orderBy(column: "id", direction: ASC)
}

input QueryPaymentBankCondition {
    name: String @eq
    address: String @like
    bank_code: String @eq
    payment_system_code: String @eq
    payment_provider_id: ID! @eq
    payment_system_id: ID! @eq
}

input QueryPaymentBanksFilterStatic @spread{
    id: ID @eq
    payment_system_id: ID @eq
    payment_provider_id: ID @eq
    name: String @ilike
    address: String @ilike
    bank_code: String @ilike
    payment_system_code: String @ilike
}

input InputPaymentBank {
    "Название банка"
    name: String!
    "Адрес банка"
    address: String!
    "Код банка"
    bank_code: String
    "Код платежной системы"
    payment_system_code: String
    "ID валют"
    currency_id: [ID]!
    "ID регионов"
    region_id: [ID]!
    "ID платежного системы"
    payment_system_id: ID!
    "ID платежного провидера"
    payment_provider_id: ID!
    "Активный не активный (true/false)"
    is_active: Boolean
}

extend type Mutation @guard {
    "Создать банк"
    createPaymentBank(
        input: InputPaymentBank! @spread
    ): PaymentBank
        @field(resolver: "PaymentBankMutator@create")

    "Обновить поля банка"
    updatePaymentBank(
        id: ID!
        input: InputPaymentBank! @spread
    ): PaymentBank
        @field(resolver: "PaymentBankMutator@update")

    "Удалить платежную систему"
    deletePaymentBank(id: ID!): PaymentBank   @delete

}
