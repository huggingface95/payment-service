type ApplicantAccount {
    "ID"
    id: ID!
    "Получить связанный код валюты"
    currency: Currencies @belongsTo(relation:"currencies")
    "Аккаунт/Карта"
    account_number: String
    "Тип аккаунта"
    account_type: String!
    "Имя"
    account_name: String!
    "Баланс"
    current_balance: Decimal
    "Показать на главной"
    is_show: Boolean
    "Первичный аккаунт"
    is_primary: Boolean
}

input QueryApplicantAccountsFilterStatic @spread {
    is_show: Boolean @eq
}

extend type Query @guard(with: "api_client") @namespace(field: "App\\GraphQL\\Queries\\Applicant") {
    """
    Получить список аккаунтов
    """
    applicantAccounts(
        filter: _ @filterConditions(static: QueryApplicantAccountsFilterStatic)
        orderBy: _ @orderBy(columns: ["id", "current_balance"])
    ): [ApplicantAccount!]
        @field(resolver: "ApplicantAccountQuery@getList")
        @orderBy(column: "id", direction: DESC)
}

extend type Mutation @guard(with: "api_client") @namespace(field: "App\\GraphQL\\Mutations\\Applicant") {
    "Изменение аккаунта"
    updateApplicantAccount(
        "ID"
        id: ID!
        "Показать на главной"
        is_show: Boolean!
    ): ApplicantAccount!
        @field(resolver: "ApplicantAccountMutator@update")
}