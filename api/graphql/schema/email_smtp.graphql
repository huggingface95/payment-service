"""
Шаблоны электронной почты
Banking-> Email Templates Settings
"""
type EmailSmtp {
    id: ID!
    "Защита"
    security: Securities
    "Имя хоста"
    host_name: String!
    "От кого"
    from_name: String
    "почта"
    from_email: String
    "логин"
    username: String!
    "пароль"
    password: String!
    "ответить кому"
    replay_to: String
    "Порт"
    port: Int!
    "Определяем отправлять через данные настройки всю почту или нет"
    is_sending_mail: Boolean
    "Название шаблона"
    name: String
    "Получить мембера"
    member: Members @belongsTo(relation: "member")
    "Получить компанию"
    company: Companies @belongsTo(relation: "company")
}


enum Securities {
    Auto @enum(value: "auto")
    Ssl @enum(value: "ssl")
    Starttls @enum(value: "starttls")
}

extend type Query @guard {
    "Получить по smtp setting по ID"
    emailSmtp(
        id: ID! @eq
    ): EmailSmtp @find

    "Получить список smtp настроек для компании"
    emailSmtps(
        company_id: ID! @eq
        orderBy: _ @orderBy(
            columns: ["id","name"]
        )
    ): [EmailSmtp!]!   @all @orderBy(column: "id", direction: ASC)
}

extend type Mutation @guard {
    "Создать смтп"
    createEmailSmtp(
        name: String!
        "Защита"
        security: Securities
        "Имя хоста"
        host_name: String!
        "От кого"
        from_name: String
        "почта"
        from_email: String
        "логин"
        username: String!
        "пароль"
        password: String!
        "ответить кому"
        replay_to: String
        "Порт"
        port: Int!
        "ID компании"
        company_id: ID!
        "Определяем отправлять через данные настройки всю почту или нет"
        is_sending_mail:Boolean
    ): EmailSmtp @field(resolver: "EmailSmtpMutator@create")

    "Обновить данные смтп"
    updateEmailSmtp(
        "Ид шаблона"
        id: ID!
        "Защита"
        security: Securities
        "Имя хоста"
        host_name: String
        "От кого"
        from_name: String
        "почта"
        from_email: String
        "логин"
        username: String
        "пароль"
        password: String
        "ответить кому"
        replay_to: String
        "Порт"
        port: Int
        "Определяем отправлять через данные настройки всю почту или нет"
        is_sending_mail: Boolean
    ): EmailSmtp @field(resolver: "EmailSmtpMutator@update")

    "Удалить запись"
    deleteEmailSmtp(
        "ID шаблона"
        id: ID!
    ): [EmailSmtp!]! @field(resolver: "EmailSmtpMutator@delete")

    sendEmail(
        security: Securities
        "Имя хоста"
        host_name: String!
        "От кого"
        from_name: String
        "почта"
        from_email: String
        "логин"
        username: String!
        "пароль"
        password: String!
        "ответить кому"
        replay_to: String
        "Порт"
        port: Int!
        "e-mail"
        email: String!
    ):StatusType @field(resolver: "EmailSmtpMutator@sendEmail")
}
