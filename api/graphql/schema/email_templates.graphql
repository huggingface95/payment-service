"""
Шаблоны электронной почты
Banking-> Email Templates Settings
"""
type EmailTemplate {
    id: ID!
    "Название"
    subject: String!
    "Тип"
    type: ClientType!
    "Тип сервиса"
    service_type: ServiceType!
    "Контент"
    content: String!
    "Header"
    header: String
    "Footer"
    footer: String
    "Получить Компанию"
    company: Companies @belongsTo(relation: "company")
    created_at: DateTime
    updated_at: DateTime
    use_layout: Boolean
}

enum ClientType{
    Administration @enum(value: "administration")
    Client @enum(value: "client")
}

enum ServiceType {
    Banking @enum(value: "banking")
    Common @enum(value: "common")
    System @enum(value: "system")
    AdminNotify @enum(value: "admin notify")
}


extend type Query @guard {
    "Получить по билет ID"
    emailTemplate(id: ID @eq): EmailTemplate @find
    """
    Получить список билетов
    orderBy: [
    {column: ID, order: DESC},
    ] сортировка по ID
    where:{column: SUBJECT, operator: LIKE, value: ""} фильтр по имени
    """
    emailTemplates(
        hasCompany: _ @whereHasConditions(columns: ["name"]),
        created_at: DateRange @whereBetween,
        where: _ @whereConditions(columns: ["subject", "company_id", "type", "service_type"]),
        orderBy: _ @orderBy(
            columns: ["id"]
        )
    ): [EmailTemplate!]! @paginate(defaultCount: 10) @orderBy(column: "id", direction: ASC)
}

extend type Mutation @guard {
    "Создать электронную почту"
    createEmailTemplate(
        "Название электронной почты"
        subject: String!
        "Взять layout"
        use_layout: Boolean!
        "Тип электронной почты"
        type: ClientType!
        "Тип сервиса"
        service_type: ServiceType!
        "Контент электронной почты"
        content: String!
        "Header электронной почты"
        header: String
        "Footer электронной почты"
        footer: String
        "Ид компании"
        company_id: ID!
    ): EmailTemplate @field(resolver: "EmailTemplateMutator@create")

    "Обновить данные компании"
    updateEmailTemplate(
        id: ID!
        "Название электронной почты"
        subject: String
        "Взять layout"
        use_layout: Boolean
        "Тип электронной почты"
        type: ClientType
        "Тип сервиса"
        service_type: ServiceType
        "Контент электронной почты"
        content: String
        "Header электронной почты"
        header: String
        "Footer электронной почты"
        footer: String
        "Ид компании"
        company_id: ID
    ): EmailTemplate   @update

    "Удалить запись"
    deleteEmailTemplate(
        id: ID!
    ): EmailTemplate   @delete

    sendEmailWithTemplate(
        "почта"
        email: String!
        "Company Id"
        company_id: ID!
        "Subject"
        subject: String!
        "Content"
        content: String
        "Header электронной почты"
        header: String
        "Footer электронной почты"
        footer: String
    ):StatusType @field(resolver: "EmailTemplateMutator@sendEmailWithData")
}


