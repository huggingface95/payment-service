"""
Access for Online Banking
"""
type ApplicantBankingAccess {
    id: ID!
    "Получить связанного applicant individual"
    applicant_individual: ApplicantIndividual @belongsTo(relation: "ApplicantIndividual")
    "Получить связанного applicant company"
    applicant_company: ApplicantCompany @belongsTo(relation: "ApplicantCompany")
    "Получить связанного Member"
    member: Members @belongsTo(relation: "Members")
    "Contact administrator"
    contact_administrator: Boolean!
    "Ежедневный лимит"
    daily_limit: Decimal!
    "Ежемесячный лимит"
    monthly_limit: Decimal!
    "Лимит операций"
    operation_limit: Decimal!
    "Получить роль"
    role: Role @hasOne(relation: "role")
    "Доступ"
    grant_access: Boolean
}

extend type Query @guard {
    """
    Получить список пользователей
    orderBy: [{ column: APPLICANT_INDIVIDUAL_ID, order: DESC }] сортировка по ID, по имени, фамилии, email
    where:{column: APPLICANT_INDIVIDUAL_ID, value: ""} фильтр по applicant_individual_id
    """
    applicantBankingAccess(
        where: _ @whereConditions(columns: ["applicant_individual_id","applicant_company_id","member_id","grant_access"]),
        orderBy: _ @orderBy(
        columns: ["id", "applicant_individual_id","applicant_company_id","member_id"],
    )): [ApplicantBankingAccess!]!   @paginate(defaultCount: 10) @orderBy(column: "id", direction: ASC)
}

extend type Mutation @guard {
    "Создать applicant company"
    createApplicantBankingAccess (
        "Applicant individual"
        applicant_individual_id: ID!
        "Applicant company"
        applicant_company_id: ID!
        "ID роли"
        role_id: ID!
        "Contact administrator"
        contact_administrator: Boolean!
        "Ежедневный лимит"
        daily_limit: Decimal!
        "Ежемесячный лимит"
        monthly_limit: Decimal!
        "Лимит операций"
        operation_limit: Decimal!
        "Использованный лимит"
        used_limit: Decimal
    ): ApplicantBankingAccess
        @field(resolver: "ApplicantBankingAccessMutator@create")

    "Редактирование applicant company"
    updateApplicantBankingAccess (
        id: ID!
        "Applicant individual"
        applicant_individual_id: ID!
        "Applicant company"
        applicant_company_id: ID!
        "ID роли"
        role_id: ID!
        "Contact administrator"
        contact_administrator: Boolean!
        "Ежедневный лимит"
        daily_limit: Decimal!
        "Ежемесячный лимит"
        monthly_limit: Decimal!
        "Лимит операций"
        operation_limit: Decimal!
    ): ApplicantBankingAccess
        @field(resolver: "ApplicantBankingAccessMutator@update")

    "Удалить пользователя"
    deleteApplicantBankingMember(
        id: ID!
    ): ApplicantBankingAccess   @delete

    "Предоставить доступ"
    grantApplicantBankingAccess(
        id: ID!
    ): ApplicantBankingAccess
        @field(resolver: "ApplicantBankingAccessMutator@grantAccess")

    "Отозвать доступ"
    deleteApplicantBankingAccess(
        id: ID!
    ): ApplicantBankingAccess
        @field(resolver: "ApplicantBankingAccessMutator@deleteAccess")
}

