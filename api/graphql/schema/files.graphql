"""
Файлы
"""
type Files {
    id: ID!
    "Исходное имя файла"
    file_name: String!
    "Тип файла"
    mime_type: String!
    "Размер загружаемого файла"
    size: Int!
    "Тип сущности для которой загружается файл"
    entity_type: FileEntityTypeEnum!
    "Кто загружал файл"
    author_id: Int!
    "Путь к загруженному файлу на ovh"
    storage_path: String!
    "Название файла на ovh"
    storage_name: String!
    "Ссылка на файл"
    link: String!
    created_at: DateTimeUtc
    updated_at: DateTimeUtc
}


enum FileEntityTypeEnum {
    MEMBER               @enum(value: "member")
    COMPANY              @enum(value: "company")
    DOCUMENT             @enum(value: "document")
    APPLICANT_INDIVIDUAL @enum(value: "applicant_individual")
    APPLICANT_COMPANY    @enum(value: "applicant_company")
    APPLICANT            @enum(value: "applicant")
    PROJECT              @enum(value: "project")
    FILE                 @enum(value: "file")
}

extend type Query @guard {
    "Получить файл по ID"
    file(id: ID @eq): Files   @find
    """
    Получить список файлов
    orderBy: [{ column: ID, order: DESC }] сортировка по ID
    """
    files(
        filter: _ @filterConditions(static: QueryFilesFilterStatic),
        orderBy: _ @orderBy(columns: ["id", "author_id"])
    ): [Files!]! @paginate(defaultCount: 10) @orderBy(column: "id", direction: ASC)
}

input QueryFilesFilterStatic @spread {
    author_id: ID @eq
    entity_type: String @ilike
}

extend type Mutation @guard {
    "Удалить файл"
    deleteFile(
        id: ID!
    ): Files   @delete
}
