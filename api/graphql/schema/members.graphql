
type Members {
    id: ID!
    first_name: String!
    last_name: String!
    email: EMAIL!
    sex: String
    is_active: Boolean
    company: Companies! @hasOne
    country: Country @hasOne
    language: Languages @hasOne
    member_group_role_id: Int!
    two_factor_auth_setting_id: Int!
}


extend type Query {
    member(id: ID @eq): Members @find
    members: [Members!]! @paginate(defaultCount: 10)
}

type Mutation {
    createMember(
        first_name: String!
        last_name: String!
        email: EMAIL!
        sex: String
        company_id: Int!
        country_id: Int
        language_id: Int
        member_group_role_id: Int
        is_active: Boolean
    ): Members @create

    updateMember(
        id: ID!
        first_name: String!
        last_name: String!
        email: EMAIL!
        sex: String
        company_id: Int!
        country_id: Int
        language_id: Int
        member_group_role_id: Int
        is_active: Boolean
    ): Members @update


}

